dist: trusty
sudo: false
language: cpp

matrix:
  include:
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env: COMPILER='clang++-5.0'
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
      env: COMPILER='g++-7'

install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
    # Install CMake
  - |
    CMAKE_URL="https://cmake.org/files/v3.8/cmake-3.8.2-Linux-x86_64.tar.gz"
    mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
    export PATH=${DEPS_DIR}/cmake/bin:${PATH}
  - travis_retry git clone https://github.com/catchorg/Catch2.git # Install Catch2
  - pushd Catch2
  - git checkout tags/v2.1.2
  - mkdir build && cd build
  - cmake .. -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX="${DEPS_DIR}/install"
  - cmake --build . -- install
  - export CMAKE_PREFIX_PATH="${DEPS_DIR}/install/lib/cmake"
  - popd

before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - export CXX=${COMPILER}

script:
  - mkdir build && cd build
  - cmake .. -DQCX_ASSERT_TREAT_WARNINGS_AS_ERRORS=ON -DCMAKE_INSTALL_PREFIX="${DEPS_DIR}/install"
  - cmake --build . -- -j2
  - ctest -V
  - cmake --build . -- install
  - pushd $HOME
  # try to use the project now
  - mkdir -p proj && cd proj
  # setup CMakeLists.txt
  - echo "cmake_minimum_required(VERSION 3.8)" >CMakeLists.txt
  - echo "project(proj CXX)" >>CMakeLists.txt
  - echo "find_package(QcxAssert 0.1 REQUIRED)" >>CMakeLists.txt
  - echo "add_executable(proj main.cpp)" >>CMakeLists.txt
  - echo "target_link_libraries(proj Qcx::Assert)" >>CMakeLists.txt
  # setup main.cpp
  - echo "#include <qcx/assert.hpp>" >main.cpp
  - echo "int main(){" >>main.cpp
  - echo "qcx::use_assert_handler(qcx::throw_assert_handler);" >>main.cpp
  - echo "try{QCX_ASSERT_FAST(false);}catch(qcx::assertion_error const&){return 0;}" >>main.cpp
  - echo "return 1;}" >>main.cpp
  - mkdir build && cd build
  - cmake ..
  - cmake --build .
  - ./proj
